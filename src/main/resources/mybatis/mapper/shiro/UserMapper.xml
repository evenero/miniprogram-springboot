<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ucmed.shiro.model.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.ucmed.shiro.model.bean.pojo.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="realname" property="realname" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="salt" property="salt" jdbcType="VARCHAR" />
    <result column="insert_uid" property="insertUid" jdbcType="INTEGER" />
    <result column="insert_time" property="insertTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="is_del" property="isDel" jdbcType="BIT" />
    <result column="is_job" property="isJob" jdbcType="BIT" />
    <result column="extend" property="extend" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, realname, mobile, email, password, salt, insert_uid, insert_time, update_time, 
    is_del, is_job, extend
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ucmed.shiro.model.bean.pojo.User" >
    insert into user (id, username, realname, 
      mobile, email, password, 
      salt, insert_uid, insert_time, 
      update_time, is_del, is_job, 
      extend)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{salt,jdbcType=VARCHAR}, #{insertUid,jdbcType=INTEGER}, #{insertTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{isDel,jdbcType=BIT}, #{isJob,jdbcType=BIT}, 
      #{extend,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ucmed.shiro.model.bean.pojo.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="realname != null" >
        realname,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="salt != null" >
        salt,
      </if>
      <if test="insertUid != null" >
        insert_uid,
      </if>
      <if test="insertTime != null" >
        insert_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="isDel != null" >
        is_del,
      </if>
      <if test="isJob != null" >
        is_job,
      </if>
      <if test="extend != null" >
        extend,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="insertUid != null" >
        #{insertUid,jdbcType=INTEGER},
      </if>
      <if test="insertTime != null" >
        #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null" >
        #{isDel,jdbcType=BIT},
      </if>
      <if test="isJob != null" >
        #{isJob,jdbcType=BIT},
      </if>
      <if test="extend != null" >
        #{extend,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ucmed.shiro.model.bean.pojo.User" >
    update user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="insertUid != null" >
        insert_uid = #{insertUid,jdbcType=INTEGER},
      </if>
      <if test="insertTime != null" >
        insert_time = #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null" >
        is_del = #{isDel,jdbcType=BIT},
      </if>
      <if test="isJob != null" >
        is_job = #{isJob,jdbcType=BIT},
      </if>
      <if test="extend != null" >
        extend = #{extend,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ucmed.shiro.model.bean.pojo.User" >
    update user
    set username = #{username,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      insert_uid = #{insertUid,jdbcType=INTEGER},
      insert_time = #{insertTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_del = #{isDel,jdbcType=BIT},
      is_job = #{isJob,jdbcType=BIT},
      extend = #{extend,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 自定义sql语句 -->
  <!--=Start getUserAndRoles 查询用户及他对应的角色ids -->
	<resultMap id="getUserRoles" type="com.ucmed.shiro.model.bean.vo.UserRolesVO">
		<id column="id" property="id" jdbcType="INTEGER" />
	    <result column="username" property="username" jdbcType="VARCHAR" />
	    <result column="realname" property="realname" jdbcType="VARCHAR" />
	    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
	    <result column="email" property="email" jdbcType="VARCHAR" />
	    <result column="password" property="password" jdbcType="VARCHAR" />
	    <result column="salt" property="salt" jdbcType="VARCHAR" />
	    <result column="insert_uid" property="insertUid" jdbcType="INTEGER" />
	    <result column="insert_time" property="insertTime" jdbcType="TIMESTAMP" />
	    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
	    <result column="is_del" property="isDel" jdbcType="BIT" />
	    <result column="is_job" property="isJob" jdbcType="BIT" />
	    <result column="extend" property="extend" jdbcType="VARCHAR" />
		<collection property="userRoles" ofType="com.ucmed.shiro.model.bean.pojo.UserRoleKey">
			<result column="user_id" property="userId" />
			<result column="role_id" property="roleId" />
		</collection>
	</resultMap>
	<select id="getUserAndRoles" resultMap="getUserRoles">
		select
		u.id, u.username, u.realname, 
	    u.mobile, u.email, u.password, 
	    u.salt, u.insert_uid, u.insert_time, 
	    u.update_time, u.is_del, u.is_job, 
	    u.extend, ur.user_id, ur.role_id
		from user u
		LEFT JOIN user_role ur ON
		u.id=ur.user_id
		WHERE u.id=#{id} AND u.is_del=0 and u.is_job=0
	</select>
	<!--=End getUserAndRoles 查询用户及他对应的角色ids -->
	<!--=Start findUser 根据用户名和密码查找用户 -->
	<select id="findUser" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user
		WHERE username=#{username} AND password =#{password} and
		is_del=0 and is_job=0
	</select>
	<!--=End findUser 根据用户名和密码查找用户 -->
	<!--=Start findUserByMobile 根据手机号获取用户数据 -->
	<select id="findUserByMobile" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user
		WHERE
		mobile=#{mobile} and is_del=0
	</select>
	<!--=End findUserByMobile 根据手机号查找用户 -->
	<!--=Start findUserByUserName 根据用户名获取用户数据 -->
	<select id="findUserByUserName" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user
		WHERE username=#{username} and is_del=0
	</select>
	<!--=End findUserByName 根据用户名查找用户 -->
</mapper>